correct love {
	server_names:	abcdegf, uhuh, no
	port: -80
	root: ./html
	default_file: index.html
	error_pages {
		404: /html/error404.html
	}
	max_client_body_size: 56
	/ {
		http_methods: GET, DELETE, POST
		http_redirect: /hello
		root: /html
		directory_listing: on
		default_file: index.html
		cgi_extensions: .dms, .py, .c
		upload_directory: /html/upload
	}
	/whatsup {
		http_methods: DELETE
		root: /html/hehe
		directory_listing: off
		default_file: goodbye.html
		cgi_extensions: .dms
		upload_directory: src
	}
}

wrong { love {
	server_names:	abcdegf, uhuh,
	no
	
	port: hahaha
	root: hahahahah
	error_pages {
		404: /html/error404.html
	}}}
	max_client_body_size: 56
	/ {
		http_methods: GET, DELETE, POST
		http_redirect: /hello
		root: /html
		directory_listing: on
		default_file: index.html
		cgi_extensions: .dms, .py, .c
		upload_directory: /html/upload
	}
	/whatsup {
		http_methods: DELETE
		alias: /html/hehe
		directory_listing: off
		default_file: goodbye.html
		cgi_extensions: .dms
		upload_directory: src
	}
}
}

general rules:
	- 3 types of lines:	new block		-> optionally name and then an opening bracket at the end of a lines
						closing block	-> only whitespace and then closing bracket at EOL
						setting			-> no brackets, whitespace allowed, needs to have semicolon
						(empty)			-> empty line with any kind of whitespace allowed and ignored

hate {
	server_names: ok if missing!
	port: only 1!, has to be there. between 0 and USHORT_MAX.
	root: has to be valid path. only 1. mandatory.
	default_file: has to be there. only 1. has to be valid path.
	error_pages {} ok if missing i think? need to check if that works
					code needs to be between 100 and 599, which is valid error_codes
					error if filepath doesnt exist or program doesnt have read access
	max_client_body_size:   in characters/bytes. 1 to USHORT_MAX. only one, if not there read until eof/allow infinte size
	routes start with / and then the url, opens and closes brackets. {
		http_redirect: only one arg. if not there, use these settings!
		http_methods: must be either GET, DELETE or POST, at least one of them. if not there, allow all 3
		root: only one arg. if not this neither alias, use name of route. -> if not there check if route is valid path
		alias: either root or alias. 
		default_file: doesnt need to be there. can be any file, so no limitations. needs to be one file however
		upload_directory: string. if not there, use root. error if dir not there. can be created maybe?
							inc, obj, src, conf invalid.
		directory_listing: on or off.  off by default. doesnt need to be there.
		cgi_extensions: need to be either .dms, .py, .c | all allowed by default, so no need. if empty value, none allowed.
	}
		}

void { max_client_body_size: 4, 5, 2 /hello {} }

some { server_names:  
ports:
error_pages:      max_client_body_size
things
/hello {
	http_methods: 
	http_redirect: 
	root:
	directory_listing:  fdd         default_file:
	cgi_extensions: 
	upload_directory:     	 	
	
}


}

